Index: file.c
===================================================================
RCS file: /home/teranisi/cvsroot/w3m/file.c,v
retrieving revision 1.1.1.1
retrieving revision 1.1.1.1.2.4
diff -u -r1.1.1.1 -r1.1.1.1.2.4
--- file.c	2001/07/18 14:12:09	1.1.1.1
+++ file.c	2001/07/19 06:59:05	1.1.1.1.2.4
@@ -842,6 +842,16 @@
 	    term_cbreak();
 	}
 	else {
+	    /*
+	     * If post file is specified as '-', stdin is closed at this point.
+	     * In this case, w3m cannot read username from stdin.
+	     * So exit with error message.
+	     * (This is same behavior as lwp-request.)
+	     */
+	    if (feof(stdin) || ferror (stdin)) {
+		fprintf(stderr, "w3m: Authorization required for %s\n", realm);
+		exit(1);
+	    }
 	    printf("Username: ");
 	    fflush(stdout);
 	    uname = Strfgets(stdin);
@@ -1329,6 +1339,7 @@
 	    }
 	}
     }
+    if (header_string) header_string = NULL;
     if (fmInitialized) {
 	term_raw();
 	signal(SIGINT, prevtrap);
Index: fm.h
===================================================================
RCS file: /home/teranisi/cvsroot/w3m/fm.h,v
retrieving revision 1.1.1.1
retrieving revision 1.1.1.1.2.3
diff -u -r1.1.1.1 -r1.1.1.1.2.3
--- fm.h	2001/07/18 14:12:09	1.1.1.1
+++ fm.h	2001/07/19 06:46:24	1.1.1.1.2.3
@@ -666,6 +666,9 @@
 global int w3m_debug;
 global int w3m_halfdump init(FALSE);
 global int w3m_halfload init(FALSE);
+global char *post_file;
+global Str header_string init(NULL);
+global int override_content_type init(FALSE);
 
 #ifdef COLOR
 global int useColor init(TRUE);
Index: main.c
===================================================================
RCS file: /home/teranisi/cvsroot/w3m/main.c,v
retrieving revision 1.2
retrieving revision 1.1.1.1.2.3
diff -u -r1.2 -r1.1.1.1.2.3
--- main.c	2001/07/19 04:56:32	1.2
+++ main.c	2001/07/19 06:46:25	1.1.1.1.2.3
@@ -114,6 +114,8 @@
     fprintf(f, "    +<num>           goto <num> line\n");
     fprintf(f, "    -num             show line number\n");
     fprintf(f, "    -no-proxy        don't use proxy\n");
+    fprintf(f, "    -post file       use POST method with file content\n");
+    fprintf(f, "    -header string   insert string as a header\n");
 #ifdef MOUSE
     fprintf(f, "    -no-mouse        don't use mouse\n");
 #endif				/* MOUSE */
@@ -214,6 +216,33 @@
     return;
 }
 
+Str
+make_optional_header_string (char *s)
+{
+    char *p;
+    Str hs;
+
+    for (p = s; *p && *p != ':'; p++);
+    if (*p != ':' || p == s)
+	return NULL;
+    if (strchr(s, '\n')) {
+	return NULL;
+    }
+    hs = Strnew_size(p - s);
+    strncpy(hs->ptr, s, p - s);
+    hs->length = p - s;
+    if (!Strcasecmp_charp(hs, "content-type")) {
+	override_content_type = TRUE;
+    }
+    Strcat_charp(hs, ": ");
+    if (*(p + 1)) { /* not null header */
+	for (p = p + 1; isspace(*p); p++); /* skip white spaces */
+	Strcat_charp(hs, p);
+    }
+    Strcat_charp(hs, "\r\n");
+    return hs;
+}    
+
 int
 MAIN(int argc, char **argv, char **envp)
 {
@@ -477,6 +506,21 @@
 		showLineNum = TRUE;
 	    else if (!strcmp("-no-proxy", argv[i]))
 		Do_not_use_proxy = TRUE;
+	    else if (!strcmp("-post", argv[i])) {
+		if (++i >= argc)
+		    usage();
+		post_file = argv[i];
+	    }
+ 	    else if (!strcmp("-header", argv[i])) {
+		Str hs;
+ 		if (++i >= argc)
+ 		    usage();
+		if ((hs = make_optional_header_string(argv[i])) != NULL)
+		    if (header_string == NULL)
+			header_string = hs;
+		    else
+			Strcat (header_string, hs);
+ 	    }	    
 #ifdef MOUSE
 	    else if (!strcmp("-no-mouse", argv[i])) {
 		mouse_end();
@@ -656,7 +700,29 @@
 		newbuf = loadGeneralFile(load_argv[i], NULL, NO_REFERER, 0, request);
 	    }
 	    else {
-		newbuf = loadGeneralFile(load_argv[i], NULL, NO_REFERER, 0, NULL);
+ 	        if (post_file) {
+		    FILE *fp;
+		    Str body;
+		    if (!strcmp (post_file, "-"))
+		        fp = stdin;
+		    else
+		        fp = fopen (post_file, "r");
+		    if (fp == NULL) {
+		        fprintf(stderr, "w3m: Can't open %s\n", post_file);
+			continue;
+		    }
+		    body = Strfgetall (fp);
+		    if (fp != stdin) fclose (fp);
+ 		    request = newFormList (NULL, "post", NULL, NULL, NULL, NULL);
+ 		    request->body = body->ptr;
+ 		    request->boundary = NULL;
+ 		    request->length = strlen (body->ptr);
+ 		}
+ 		else {
+ 		  request = NULL;
+ 		}
+ 	        
+ 		newbuf = loadGeneralFile(load_argv[i], NULL, NO_REFERER, 0, request);
 	    }
 	    if (newbuf == NULL) {
 		fprintf(stderr, "w3m: Can't load %s\n", load_argv[i]);
Index: url.c
===================================================================
RCS file: /home/teranisi/cvsroot/w3m/url.c,v
retrieving revision 1.1.1.1
retrieving revision 1.1.1.1.2.4
diff -u -r1.1.1.1 -r1.1.1.1.2.4
--- url.c	2001/07/18 14:12:09	1.1.1.1
+++ url.c	2001/07/19 06:54:24	1.1.1.1.2.4
@@ -1174,15 +1174,22 @@
 	    Strcat_charp(tmp, "\r\n");
 	}
 	else {
-	    Strcat_charp(tmp, "Content-type: application/x-www-form-urlencoded\r\n");
+	    if (!override_content_type) {
+		Strcat_charp(tmp, "Content-type: application/x-www-form-urlencoded\r\n");
+	    }
 	    Strcat(tmp, Sprintf("Content-length: %ld\r\n", hr->request->length));
+	    if (header_string)
+		Strcat (tmp, header_string);
 	    Strcat_charp(tmp, "\r\n");
 	    Strcat_charp(tmp, hr->request->body);
 	    Strcat_charp(tmp, "\r\n");
 	}
     }
-    else
+    else {
+	if (header_string)
+	    Strcat (tmp, header_string);
 	Strcat_charp(tmp, "\r\n");
+    }
 #ifdef DEBUG
     fprintf(stderr, "HTTPrequest: [ %s ]\n\n", tmp->ptr);
 #endif				/* DEBUG */
