\input texinfo @c -*-texinfo -*- coding: iso-2022-jp -*-
@c %**start of header
@setfilename emacs-w3m-ja.info
@settitle Emacs-w3m -- an Emacs interface to w3m --
@c %**end of header
@documentlanguage ja
@include version.texi
@synindex pg cp
@finalout

@dircategory GNU Emacs Lisp
@direntry
* Emacs-w3m-ja: (emacs-w3m-ja).  An Emacs interface to w3m
@end direntry

@c permissions text appears in an Info file before the first node.
@ifinfo
This file documents emacs-w3m, an Emacs interface to w3m.

このファイルは Emacs で動く w3m のインタフェースである emacs-w3m に関す
る説明書です。

Copyright @copyright{} 2000, 2001, 2002 @w{TSUCHIYA Masatoshi}.

This edition is for emacs-w3m version @value{VERSION}.

この版は emacs-w3m バージョン @value{VERSION} に対応します。

Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.1 or
any later version published by the Free Software Foundation; with no
Invariant Sections, with the Front-Cover texts being ``A GNU
Manual'', and with the Back-Cover Texts as in (a) below.  A copy of the
license is included in the section entitled ``GNU Free Documentation
License'' in the Emacs manual.

この文書を、フリーソフトウェア財団発行の GNU フリー文書利用許諾契約書
第 1.1 版またはそれ以降の版が定める条件の下で複製、配布、あるいは変更す
ることを許可します。変更不可部分は指定しません。「A GNU Manual」は表表紙
テキスト、以下の (a) は裏表紙テキストです。この利用許諾契約書の複写は
「Emacs manual」の「GNU フリー文書利用許諾契約書」という章に含まれていま
す。

(a) The FSF's Back-Cover Text is: ``You have freedom to copy and modify
this GNU Manual, like GNU software.  Copies published by the Free
Software Foundation raise funds for GNU development.''

(a) FSF の裏表紙テキスト:「あなたにはこの GNU Manual を GNU ソフトウェア
のように複製したり変更する自由があります。複製はフリーソフトウェア財団に
よって出版されました。(フリーソフトウェア財団は) GNU の開発のために必要
な資金を集めています。」

This document is part of a collection distributed under the GNU Free
Documentation License.  If you want to distribute this document
separately from the collection, you can do so by adding a copy of the
license to the document, as described in section 6 of the license.

この文書は「GNU フリー文書利用許諾契約書」に基づいて配布された収集著作物
の一部です。もしあなたがこの文書を収集著作物から分離して配布したいときは、
契約書の第 6 項に記述されているように、文書に契約書の複写を付加すること
によって、行なうことができます。

@end ifinfo

@titlepage
@sp 10
@title Emacs-w3m ユーザマニュアル
@subtitle An Emacs interface to w3m for emacs-w3m version @value{VERSION}
@author Emacs-w3m 開発チーム
@page

@vskip 0pt plus 1filll
Copyright @copyright{} 2000, 2001, 2002 @w{TSUCHIYA Masatoshi}.

This manual corresponds to emacs-w3m version @value{VERSION}.

このマニュアルは emacs-w3m バージョン @value{VERSION} に対応します。

Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.1 or
any later version published by the Free Software Foundation; with no
Invariant Sections, with the Front-Cover texts being ``A GNU
Manual'', and with the Back-Cover Texts as in (a) below.  A copy of the
license is included in the section entitled ``GNU Free Documentation
License'' in the Emacs manual.

この文書を、フリーソフトウェア財団発行の GNU フリー文書利用許諾契約書
第 1.1 版またはそれ以降の版が定める条件の下で複製、配布、あるいは変更す
ることを許可します。変更不可部分は指定しません。「A GNU Manual」は表表紙
テキスト、以下の (a) は裏表紙テキストです。この利用許諾契約書の複写は
「Emacs manual」の「GNU フリー文書利用許諾契約書」という章に含まれていま
す。

(a) The FSF's Back-Cover Text is: ``You have freedom to copy and modify
this GNU Manual, like GNU software.  Copies published by the Free
Software Foundation raise funds for GNU development.''

(a) FSF の裏表紙テキスト:「あなたにはこの GNU Manual を GNU ソフトウェア
のように複製したり変更する自由があります。複製はフリーソフトウェア財団に
よって出版されました。(フリーソフトウェア財団は) GNU の開発のために必要
な資金を集めています。」

This document is part of a collection distributed under the GNU Free
Documentation License.  If you want to distribute this document
separately from the collection, you can do so by adding a copy of the
license to the document, as described in section 6 of the license.

この文書は「GNU フリー文書利用許諾契約書」に基づいて配布された収集著作物
の一部です。もしあなたがこの文書を収集著作物から分離して配布したいときは、
契約書の第 6 項に記述されているように、文書に契約書の複写を付加すること
によって、行なうことができます。

@end titlepage

@ifnottex
@node Top
@top Emacs-w3m ユーザマニュアル

@flushright
Emacs-w3m 開発チーム
@end flushright

この文書は emacs-w3m バージョン @value{VERSION} に対応します。

@end ifnottex

@menu
* Introduction::                はじめに
* Getting Started::             Emacs-w3m を使い始めるのはとっても簡単
* Basic Usage::                 基本的な使い方
* Pretty Good Features::        たくさんのすぐれもの
* Customizable Options::        デフォルトのままでも結構良いと思うけれど
* Hooking into MUAs::           メール/ニュースリーダーで使う
* Frequently Asked Questions::  必ず答があるとは限らない
* Known Problems::              あなたならきっと解決できる
* Shimbun Library::             ウェブ上の新聞を読むための道具
* Mailing List::                メーリングリスト、バグリポート
* Index::                       索引

@detailmenu
 --- 項目の詳細なリスト ---

Getting Started

* Required Emacs Version::      どんなバージョンの Emacs で使えるの?
* You Need w3m::                w3m を使います: emacs-w3m が速いわけ
* Other Requirements::          Emacs-w3m を動作させるのに必要なもの
* Installing Emacs-w3m::        Emacs-w3m をインストールする
* Non-UNIX-like systems::       非 UNIX 系環境でのインストール
* Minimal Settings::            設定しなければならない最低限のもの

Basic Usage

* Browsing Web Pages::          ネットサーフィンしよう!
* Inline Images::               画像表示を ON/OFF する
* Tracing History::             過去のページを振り返る
* Managing Bookmarks::          ぼくの/わたしのお気に入り
* Using Tabs::                  これが流行のタブ・ブラウザーだ
* Selecting Buffers::           たくさんのセッションから一つを選ぶ
* Downloading::                 ファイルをダウンロードする
* Submitting Forms::            HTML フォームに記入する

Pretty Good Features

* Using Search Engines::        使いやすいウェブ検索
* Grouping URLs::               一つの URL で複数のウェブページを見る
* Weather Information::         明日の天気は晴れでしょう
* Using Antenna::               アンテナを張り巡らそう
* Showing Directory Tree::      ディレクトリの木構造を表示する
* Viewing Perl Documents::      Perl のドキュメントを見る
* Using Namazu::                Namazu でファイルを検索する
* Octet::                       application/octet-stream データを見る

Customizable Options

* General Options::             一般的なユーザオプション
* Image Options::               画像に関連したユーザオプション
* Bookmark Options::            ブックマークに関連したユーザオプション
* Search Options::              ウェブ検索に関連したユーザオプション
* Weather Options::             天気予報に関連したユーザオプション
* Dtree Options::               dtree に関連したユーザオプション
* Antenna Options::             アンテナに関連したユーザオプション
* Perldoc Options::             Perldoc に関連したユーザオプション
* Namazu Options::              Namazu に関連したユーザオプション
* Octet Options::               Octet に関連したユーザオプション
* Other Options::               その他のユーザオプション

Hooking into MUAs

* Gnus::                        Gnus で HTML メールを読む
* Mew::                         Mew で HTML メールを読む
* SEMI MUAs::                   SEMI MUA で HTML メールを読む

Frequently Asked Questions

Known Problems

Shimbun Library

Mailing List

@end detailmenu
@end menu

@node Introduction
@chapter はじめに
@cindex Introduction

すばらしい w3m プログラムを開発してくれた伊藤彰則さんと w3m チームのみな
さんに、格段の感謝を捧げます。さらにコメント、提案およびバグの修正をして
くれたすべての人々に感謝します。たとえ問題があっても、責任はすべて私た
ち (emacs-w3m 開発チーム) にあります。もっとも、保証はまったくありません
が。Emacs-w3m は 2000年6月に土屋雅稔によって最初に作られました。

Emacs-w3m の公式ページ @uref{http://emacs-w3m.namazu.org/} も併せてご覧
下さい。

@node Getting Started
@chapter Emacs-w3m を使い始めるのはとっても簡単
@cindex getting started
@cindex starting up

ひょっとすると、あなたのシステムには emacs-w3m がすでにインストールされ
ているかもしれません。その場合、あなたはこの項を読み飛ばして、直ちに使い
始めることができます。そんな幸運に恵まれなかったならば、emacs-w3m のイン
ストールの仕方を会得するために、読み続けて下さい。

@menu
* Required Emacs Version::      どんなバージョンの Emacs で使えるの?
* You Need w3m::                w3m を使います: emacs-w3m が速いわけ
* Other Requirements::          Emacs-w3m を動作させるのに必要なもの
* Installing Emacs-w3m::        Emacs-w3m をインストールする
* Non-UNIX-like systems::       非 UNIX 系環境でのインストール
* Minimal Settings::            設定しなければならない最低限のもの
@end menu

@node Required Emacs Version
@section どんなバージョンの Emacs で使えるの?
@cindex emacs version

以下に挙げたいろいろなバージョンの Emacsen で emacs-w3m を動作させること
ができます。

@table @samp

@item Emacs 21.x
追加のパッケージは不要です。

@item XEmacs 21.x
APEL パッケージと @samp{gifsicle} プログラムが必要です (@pxref{Other
Requirements})。最も安定している最新の XEmacs 21.4 を使うことを推奨しま
す。

@item Emacs 20.x
追加のパッケージは不要です。さらに BITMAP-MULE パッケージを使うことによっ
て、白黒のビットマップ画像をインライン表示することができま
す (@pxref{Other Requirements})。

@item Emacs 19.34 (含 Mule 2.3)
APEL パッケージ、@samp{新しい custom} パッケージおよ
び @file{regexp-opt.el} モジュールが必要です。Emacs Emacs 19.34 を元にし
た Mule 2.3 では、BITMAP-MULE パッケージを使うことによって、白黒のビット
マップ画像をインライン表示することができます (@pxref{Other
Requirements})。

@end table

@node You Need w3m
@section w3m を使います: emacs-w3m が速いわけ
@cindex w3m

Emacs-w3m は外部コマンド w3m を、ウェブコンテンツを取得するためのバック
エンドとして、または HTML の翻訳エンジンとして使用します; そうして、私た
ちは非同期動作によって加速された Emacs ウェブ・ブラウザーを実現すること
ができました。

あなたは最新の w3m をインストールしなければなりません。それは以下の場所
で取得できます:

@uref{http://prdownloads.sourceforge.net/w3m/}


@node Other Requirements
@section Emacs-w3m を動作させるのに必要なもの
@cindex APEL
@cindex gifsicle
@cindex BITMAP-MULE
@cindex new custom
@cindex regexp-opt.el
@cindex FLIM

Emacs のバージョンによっては、サードパーティのパッケージが必要です。この
項では、それらを見つけてインストールするための資料を提供します。

@table @samp

@item APEL
XEmacs、Emacs 19.34 または Mule 2.3 に不可欠です。Emacs-w3m を構築する前
に APEL をインストールしなければなりません。APEL は以下の場所にあります:

@uref{ftp://ftp.m17n.org/pub/mule/apel/apel-10.4.tar.gz}


もしすでに APEL XEmacs パッケージをインストールしているならば、それを上
記のリンクで示した APEL で置き換えることを強く勧めます。置き換えるには、
以下に示すような命令を使って下さい:

@example
% rm -fr /usr/local/lib/xemacs/xemacs-packages/lisp/apel
% cd apel-10.4
% make install-package XEMACS=xemacs-21.4.x\
  PACKAGEDIR=/usr/local/lib/xemacs/xemacs-packages
@end example

@item gifsicle
XEmacs に不可欠です。すべての XEmacs 21.x には、オプティマイズされたアニ
メーション gif が正常に表示されなかったり、ある種のインターレース gif を
表示しようとするとクラッシュしてしまう既知のバグがあります。
Emacs-w3m は gif データを XEmacs 21.x で扱える形式に変換するため
に、@samp{gifsicle} プログラムを使います。これは次の場所から入手すること
ができます:

@uref{http://www.lcdf.org/gifsicle/}


@item BITMAP-MULE
Emacs 20.x か Emacs 19.34 を元にした Mule 2.3 で白黒のビットマップ画像を
表示するために使います。画像に興味が無ければ、必ずしも必要ではありません。
以下の場所で取得できます:

@uref{ftp://ftp.jpl.org/pub/elisp/bitmap/}


@item new custom
Emacs 19.34 (含 Mule 2.3) に不可欠です。Emacs 19.34 に含まれてい
る @samp{custom} ライブラリは @emph{古い} もので、これの API は最近
の Emacs  に含まれている @samp{新しい custom} とは違っています。Emacs
19.34 用の @samp{新しい custom} は、以下の場所から手に入れることができま
す:

@uref{ftp://ftp.dina.kvl.dk/pub/Staff/Per.Abrahamsen/custom/custom-1.9962.tar.gz}


Mule 2.3 のユーザは、以下のパッチを当てて、少し変更しなければならないこ
とに注意して下さい:

@example
----8<------8<------8<------8<------8<------8<------8<------8<----
--- custom-1.9962/cus-face.el~	Wed Mar  4 19:52:39 1998
+++ custom-1.9962/cus-face.el	Mon Mar  9 08:05:33 1998
@@ -96,7 +96,7 @@
       "Define a new FACE on all frames, ignoring X resources."
       (interactive "SMake face: ")
       (or (internal-find-face name)
-	  (let ((face (make-vector 8 nil)))
+	  (let ((face (make-vector face-vector-length nil)))
 	    (aset face 0 'face)
 	    (aset face 1 name)
 	    (let* ((frames (frame-list))
----8<------8<------8<------8<------8<------8<------8<------8<----
@end example

@item regexp-opt.el
Emacs 19.34 (含 Mule 2.3) に不可欠です。ファイ
ル @file{regexp-opt.el} は emacs-w3m の配布の @file{attic/} ディレクトリ
に含まれています。以下のように、単にどこか (例えば @file{site-lisp/} ディ
レクトリ) にコピーして、byte-compile すれば良いです:

@example
# cp -p attic/regexp-opt.el /usr/local/share/emacs/19.34/site-lisp
# cd /usr/local/share/emacs/19.34/site-lisp
# emacs -batch -q -no-site-file -f batch-byte-compile regexp-opt.el
@end example

@item FLIM
Shimbun ライブラリ (@pxref{Shimbun Library}) を使うためには FLIM パッケー
ジが必要です。Shimbun ライブラリはウェブ上の新聞を読むための道具類のコレ
クションで、Gnus、Mew、Nana-gnus、T-gnus、Wanderlust などとともに使うこ
とができます。@xref{Shimbun Library}。

たとえ Emacs 20.x か Emacs 21.x を使っている場合でも、FLIM パッケージに
は APEL パッケージが必要であることに注意して下さい。したがっ
て shimbun ライブラリを使うには、APEL と FLIM の両方をインストールしなけ
ればなりません。FLIM パッケージは以下の場所にあります:

@uref{ftp://ftp.m17n.org/pub/mule/flim/flim-1.14/}

@end table

@node Installing Emacs-w3m
@section Emacs-w3m をインストールする
@cindex install

Emacs-w3m の取得に関しては公式ペー
ジ @uref{http://emacs-w3m.namazu.org/} を参照して下さい。すべて準備でき
ましたか?  では始めましょう。

非 UNIX 系のシステム (@samp{configure} を実行できないか @samp{make} コマ
ンドが無い、何らかのシステム) に emacs-w3m をインストールするには、この
項を飛ばして次の項 @xref{Non-UNIX-like systems} に行って下さい。

@enumerate
@item
最初に、以下のように配布された emacs-w3m の tarball を適当な場所で展開し
て、先頭のディレクトリに入って下さい:

@example
% tar zxf emacs-w3m-@value{VERSION}.tar.gz
% cd emacs-w3m-@value{VERSION}
@end example

Emacs-w3m を CVS で取得したのならば、@samp{configure} スクリプトを生成す
るために引数無しで @samp{autoconf} を実行しなければなりません。

@item
@samp{configure} スクリプトを実行します。

@example
% ./configure
@end example

APEL、FLIM または他の何かを、デフォルトの @code{load-path} 以外の非標準
ディレクトリにインストールしてある場合は、以下のよう
に @samp{--with-addpath} オプションを使ってそれらを指定しなければなりま
せん:

@example
% ./configure --with-addpath=/opt/share/apel:/opt/share/flim
@end example

@item
単に @samp{make} と @samp{make install} を実行します。XEmacs を使ってい
る場合は、さらに次の段落も見て下さい。

@example
% make
% make install
@end example

すべての Lisp ファイルと info ファイルが適切なディレクトリにインストール
されるでしょう。

さて、あなたはどんなファイルがどこに行くか分かりますか?  それを前もって
知るためには、これを使って下さい:

@example
% make what-where
@end example

Emacs 21 または XEmacs を使っているならば、アイコン画像のファイルをイン
ストールした方が良いでしょう。それを行なうには:

@example
% make install-icons
@end example

@item
以下のように @samp{make install} の代わり
に @samp{make install-package} を使うことによって、
emacs-w3m を XEmacs パッケージとしてインストールすることもできます:

@example
% make
% make install-package
@end example

この場合 @samp{make install-icons} を実行する必要はありません。

パッケージ・ディレクトリを指定するには二つの方法があります:

@itemize @bullet

@item
@samp{configure} オプションの @samp{--with-packagedir=} を使います。例で
す:

@example
% ./configure --with-packagedir=/opt/xemacs/xemacs-packages
% make what-where
% make
% make install-package
@end example

@item
変数 @samp{PACKAGEDIR} を使います。例です:

@example
% ./configure
% make what-where PACKAGEDIR=/opt/xemacs/xemacs-packages
% make
% make install-package PACKAGEDIR=/opt/xemacs/xemacs-packages
@end example

@end itemize

@end enumerate

@node Non-UNIX-like systems
@section 非 UNIX 系環境でのインストール
@cindex install
@cindex non-UNIX

あなたのシステムで @samp{configure} スクリプトを実行することができないか、
@samp{make} コマンドが利用できない場合は、以下の文句を唱えて下さい。

@example
% emacs -batch -q -no-site-file -l w3mhack.el NONE -f w3mhack-nonunix-install
@end example

APEL、FLIM (または他の何か) が普通の場所にインストールされていないと、イ
ンストーラはそれらを無視してしまうでしょう。そんな場合は、以下に示すよう
に、それらの場所をインストーラに告げる必要があります:

@example
% emacs -batch -q -no-site-file -l w3mhack.el //c/share/apel://c/share/flim -f w3mhack-nonunix-install
@end example

@node Minimal Settings
@section 設定しなければならない最低限のもの

この項には基本的な設定しかありません。ユーザの好みによってカスタマイズで
きるたくさんのオプションは @xref{Customizable Options} に書かれています。

@table @samp

@item Autoloads
@cindex autoload

Emacs-w3m を XEmacs パッケージとしてインストール (@pxref{Installing
Emacs-w3m}) してあれば @file{w3m/auto-autoloads.el} ファイルがあるので、
autoload の設定を行なう必要はありません。そうでなければ、以下の行
を @file{~/.emacs} ファイルに入れて下さい:

@lisp
(autoload 'w3m "w3m"
  "Visit the WWW page using w3m" t)
@end lisp

これ以外に、必要に応じて以下のような設定を追加して下さい。

@lisp
(autoload 'w3m-find-file "w3m"
  "Find a local file using emacs-w3m." t)
(autoload 'w3m-browse-url "w3m"
  "Ask emacs-w3m to show a url." t)
(autoload 'w3m-antenna "w3m-antenna"
  "Report changes of web sites." t)
(autoload 'w3m-bookmark-view "w3m-bookmark"
  "Show bookmarks." t)
(autoload 'w3m-dtree "w3m-dtree"
  "Display a directory tree." t)
(autoload 'w3m-namazu "w3m-namazu"
  "Search files with Namazu." t)
(autoload 'w3m-perldoc "w3m-perldoc"
  "View Perl documents" t)
(autoload 'w3m-search "w3m-search"
  "Search words using emacs-w3m." t)
(autoload 'w3m-weather "w3m-weather"
  "Display a weather report." t)
@end lisp

@item Startup File
@cindex startup file
@vindex w3m-init-file

Emacs-w3m のいろんなオプションをいじるときは、
@file{~/.emacs-w3m} (@code{w3m-init-file} のデフォルト値) の利用を推奨し
ます。このファイルは @file{~/.emacs} と似ていますが、こちら
は emacs-w3m が起動するときに読み込まれます。しかし、例えば前述
の autoload のように、そこに書けない例外の設定があることに注意して下さい。

@item Proxy Gateway
@cindex firewall
@cindex proxy gateway
@vindex w3m-command-arguments
@vindex w3m-no-proxy-domains

あなたが防火壁 (firewall) の中にいて、proxy ゲートウェイを通してしか外部
のウェブ・サイトに接続できない場合は、proxy ゲートウエイを使うよう
に w3m に指示する必要があります。

これにはいくつかの方法があります。一つは環境変
数 @code{http_proxy} を shell 上で、こんなふうにグローバルに設定すること
です:

@example
setenv http_proxy http://proxy.hogege.com:8000/
@end example

他に、オプション @code{w3m-command-arguments} をカスタマイズして、
@samp{-o} および @samp{http_proxy=http://PROXY_SERVER_NAME:PORT/} を追加
する方法があります。これは @file{~/.emacs-w3m} ファイルで以下のように行
なうこともできます。

@lisp
(setq w3m-command-arguments
      (nconc w3m-command-arguments
             '("-o" "http_proxy=http://proxy.hogege.com:8000/")))
@end lisp

環境変数 @code{no-proxy} にコンマで区分けされたホスト名を設定するか、ま
たは以下のようにドメイン名 (ホスト名ではない) のリストをオプショ
ン @code{w3m-no-proxy-domains} に設定することによって、proxy ゲートウェ
イを使わずに接続するホストを指定することができます。

@lisp
(setq w3m-no-proxy-domains '("local.com" "neighbor.com"))
@end lisp

@code{no-proxy} ホストの設定に正規表現を使うには、オプショ
ン @code{w3m-command-arguments-alist} のドキュメントを見て下さい。

@end table

@node Basic Usage
@chapter 基本的な使い方


@menu
* Browsing Web Pages::          ネットサーフィンしよう!
* Inline Images::               画像表示を ON/OFF する
* Tracing History::             過去のページを振り返る
* Managing Bookmarks::          ぼくの/わたしのお気に入り
* Using Tabs::                  これが流行のタブ・ブラウザーだ
* Selecting Buffers::           たくさんのセッションから一つを選ぶ
* Downloading::                 ファイルをダウンロードする
* Submitting Forms::            HTML フォームに記入する
@end menu

@node Browsing Web Pages
@section ネットサーフィンしよう!


@node Inline Images
@section 画像表示を ON/OFF する


@node Tracing History
@section 過去のページを振り返る


@node Managing Bookmarks
@section ぼくの/わたしのお気に入り
@cindex Bookmarks

現代的なあまたのブラウザーの例に漏れず、emacs-w3m には先進のブックマーク
の機能があります: それによってカテゴリー毎に分類し、それらを編集し、ああ、
もちろん簡単に閲覧することができます。

日本語版注釈: ブックマークの語源は、本に挟む栞 (しおり) のことです。

@menu
* Adding Bookmarks::            お気に入りに URL を加える
* Consulting Bookmarks::        ブックマークを閲覧する
* Editing Bookmarks::           ブックマークを変更するには?
@end menu

@node Adding Bookmarks
@subsection お気に入りに URL を加える
@cindex Adding a bookmark
@kindex a
@kindex C-u a
@findex w3m-bookmark-add-current-url
@kindex M-a
@findex w3m-bookmark-add-this-url

ブックマークに URL を加えるには、いくつかのやり方があります。最初の一つ
は、@kbd{a} キーを使って (または @code{w3m-bookmark-add-current-url} コ
マンドを呼んで) 今現在閲覧しているページを加えることです: すると、そのブッ
クマークをどの項目に入れるかを尋ねられ (@key{TAB} キーによる補完が効きま
す)、タイトルの書き換えが促されます (デフォルトは、そのページのタイトル
になっています)。これらの二つをこなしたら、それらを有効にするため
に @kbd{RET} を叩いて下さい。すると ``Added'' というメッセージがミニバッ
ファに現れて、(うろたえるなかれ!) そのページがブックマークに記録されます。

ブックマークを加えるもう一つの方法は、@kbd{M-a} を使う (また
は @code{w3m-bookmark-add-this-url} コマンドを呼ぶ) ことです: これは、現
在位置の URL (もしそのリンクを辿ると、閲覧することができる URL) をブック
マークに加えます。その場合でも最初に説明した方法と同様に、項目の名前とタ
イトルを入力しなければなりません。そのとき、それらのデフォルトはリンク自
体の名前になっています。

最後に、三番目の方法は @kbd{C-u a} を叩くことです。このときは、ブックマー
クに加える URL、その項目、およびタイトルの入力が促されます。

@table @kbd
@item a
現在のページをブックマークに加えます。接頭引数付きで呼ばれた場合は、加え
る URL の入力が求められます (@code{w3m-bookmark-add-current-url})。

@item M-a
現在位置の URL をブックマークに加えま
す (@code{w3m-bookmark-add-this-url})。
@end table

@node Consulting Bookmarks
@subsection ブックマークを閲覧する
@cindex Consulting bookmarks
@kindex v
@findex w3m-bookmark-view

ブックマークされたページを閲覧する最も簡単な方法は、emacs-w3m のバッファ
で @kbd{v} キーを叩くことです; ですがもう一つ、特別な URL であ
る @uref{about://bookmark/} に行くことによっても可能です。すると一行あた
り一つずつのブックマークが、項目ごとにまとめられて表示されるでしょう。そ
こでは、他のページを閲覧するのと同じように、それらを確実に閲覧することが
できます。

ブックマークのページでは bookmark マイナーモードが働いています。それは、
ブックマークを編集するためのキーバインドを追加します。@xref{Editing
Bookmarks}。

@table @kbd
@item v
Visit the bookmarks page (@code{w3m-bookmark-view}).
@end table

@node Editing Bookmarks
@subsection ブックマークを変更するには?
@cindex Editing bookmarks
@findex w3m-bookmark-kill-entry
@findex w3m-bookmark-edit
@findex w3m-bookmark-undo

Bookmark マイナーモード (@pxref{Consulting Bookmarks}) は、ブックマーク
を編集するためにいくつかのキーバインドを設けています。中でもブックマーク
を kill (すなわち消去) するための @kbd{C-k} とブックマーク・ファイルを編
集するための @kbd{E} は、最も注目に値します。

ブックマークは HTML ファイルに収められています。したがってそのファイルは
手で編集することができますが、十分に注意して下さい: emacs-w3m が項目名を
認識するために必要なコメントを消してしまうことによって、ものごとは簡単に
台無しになります。あなたが HTML の基本を知っていれば、むしろファイルは極
めて分かり易いものでしょう。

@table @kbd
@item C-k
現在位置のブックマークを kill します (@code{w3m-bookmark-kill-entry})。

@item E
ブックマーク・ファイルを読み込んで、編集可能な状態にしま
す (@code{w3m-bookmark-edit})。

@item C-_
やり直しをします (@code{w3m-bookmark-undo})。
@end table

@node Using Tabs
@section これが流行のタブ・ブラウザーだ


@node Selecting Buffers
@section たくさんのセッションから一つを選ぶ


@node Downloading
@section ファイルをダウンロードする


@node Submitting Forms
@section HTML フォームに記入する

これらの emacs-w3m コマンドは、単純なキーバインドと専用の Emacs のウィン
ドゥかミニバッファを使って、フォームからフォームへの移動とフィールドに入
力するための機能を提供します。

覚えておいて欲しい大事なキーバインドは @kbd{RET} です。これは現在位置に
あるものによって異なる意味を持ちます: テキスト領域 (textarea) では、ミニ
バッファで値を入力することが促されます。選択用のタグでは、選択肢のリスト
が Emacs のエレクトリック (electric == 自己挿入) ウィンドゥに現れま
す (そこでは矢印キーで移動して、@kbd{RET} キーで一つを選ぶことができま
す)。ラジオボタンおよびチェックボックスでは、@kbd{RET} キーでそれらのう
ちの一つを選びます。

ミニバッファかエレクトリック・ウィンドゥににいるときは、@kbd{C-c C-q} キー
で取り消すことができます。フォームに記入したものを送り出すに
は @kbd{C-c C-c} を使って下さい。

@table @kbd
@item ]
次のフォームにジャンプします (@code{w3m-next-form})。

@item [
前のフォームにジャンプします (@code{w3m-previous-form})。

@item C-c C-c
現在位置のフォームに記入したものを送り出します (@code{w3m-submit-form})。

@item RET
現在位置にあるのフォーム値を書き換えます。

@item RET @r{(w3m-form-*-keymap)}
その値を選択します。

@item C-c C-q @r{(w3m-form-*-keymap)}
フォームの編集を中断して、変更を取り止めます。
@end table

@node Pretty Good Features
@chapter たくさんのすぐれもの


@menu
* Using Search Engines::        使いやすいウェブ検索
* Grouping URLs::               一つの URL で複数のウェブページを見る
* Weather Information::         明日の天気は晴れでしょう
* Using Antenna::               アンテナを張り巡らそう
* Showing Directory Tree::      ディレクトリの木構造を表示する
* Viewing Perl Documents::      Perl のドキュメントを見る
* Using Namazu::                Namazu でファイルを検索する
* Octet::                       application/octet-stream データを見る
@end menu

@node Using Search Engines
@section 使いやすいウェブ検索
@cindex Search engines

Emacs-w3m には検索エンジンを利用するための先進の機能があり、二つのインター
フェースを通して利用することができます:

@itemize
@item
標準のインターフェースです。@kbd{S} キーでいずれかの emacs-w3m バッファ
から起動されます。これは検索エンジンを指定して検索語を入力する、単純な対
話型のやり方です; @ref{The Search Interface} を参照して下さい。

@item
クイックサーチ・インターフェースです: これは技巧的に作られた URL に行く
ことによって検索エンジンを利用するための、より速い (さらに、より複雑
な) 方法です。この機能に関する詳細は @ref{Quick Searching} を参照して下
さい。
@end itemize

@menu
* The Search Interface::        Emacs-w3m による検索のやり方
* Quick Searching::             もう一つの (そして速い) ウェブ検索
* Adding New Search Engines::   お気に入りのエンジンを使うには?
@end menu

@node The Search Interface
@subsection Emacs-w3m による検索のやり方
@cindex Searching
@kindex S
@findex w3m-search
@vindex w3m-search-default-engine

Emacs-w3m のバッファーで @kbd{S} キーを使うことにより (デフォルトのキー
マップを使うものとします)、標準の検索インターフェースを立ち上げることが
できます。すると、ミニバッファで検索語の入力を求めるプロンプトが現れるの
で、一つまたは複数の語を入れて、@kbd{RET} を叩いて下さい。そのエンジンの
検索結果のページが現れ、その後、あたかも検索エンジンに通常のウェブの流儀
による入力を行なったときのように、結果を閲覧することができます。

たぶん、あなたはどのエンジンで探索したいかを決める機会が与えられていない
ことに気付くでしょう。Emacs-w3m はデフォルトで Google 検索エンジンを使い
ますが、変数 @code{w3m-search-default-engine} (@ref{Customizable
Options} 参照) をカスタマイズすることによって、この振る舞いを変更するこ
とができます。あるいは、このコマンドを使うたびに検索エンジンを指定するこ
とができます。

どのエンジンを使用するかを明示するためには、コマンドに接頭引数を与えなけ
ればなりません (これは @kbd{C-u S} のように、コマンドの前に通
常 @kbd{C-u} を叩くことを意味します)。すると emacs-w3m はエンジンの入力
を促すので、その名前を一つ選ぶことができます (@key{TAB} キーで補完ができ
ます)。いったん選択したら @kbd{RET} キーを叩いて下さい。その後で検索語を
入力することができ、@kbd{RET} をタイプすれば検索結果が現れるでしょう。

@table @kbd
@item S
Begin a new search.  If called with a prefix argument, prompt for the
engine to use (@code{w3m-search}).
@end table

@node Quick Searching
@subsection もう一つの (そして速い) ウェブ検索
@cindex Quick Searching
@cindex Special URLs
@vindex w3m-search-quick-search-engine-alist
@vindex w3m-search-engine-alist
@vindex w3m-default-coding-system

ウェブ・パワーユーザ (これを読んでいるあなた) には、迅速で効率的な検索の
方法が必要です。クイックサーチはその一つです。

それは何をするのかって?  それは @uref{gg:emacs} のような特別の URL に行
くだけで、ウェブ検索を始めさせるのです。このモードの動作の長所は、次の通
りです:

@itemize
@item
速い。エンジンと検索語を選ぶのに、一つの URL をタイプするだけです。

@item
便利。この機能によって、容易に emacs-w3m のタブかウィンドゥを開いて、検
索を始めることができます。例えば、@kbd{G} キーで新しいウィンドウを開いて
クイックサーチ URL に行くように。そして、特別のクイックサーチ URL そのも
のにも、ブックマークを付けることができます。

@item
グルーピング機能も使える。例えば @uref{group:gg:emacs&ya:w3m} のよう
な URL によって、同時に二つの検索を始めることができます。例えばこの場合
は、Google で ``emacs'' の、Yahoo! で ``w3m'' の検索をそれぞれ始めます。
@xref{Grouping URLs}。
@end itemize

これを使うのはとても簡単です: ``gnu'' という単語を Google で探したいとす
れば、@kbd{g} を叩いてから ``gg:gnu'' という url をタイプして下さい。こ
の表現の第一の部分 "gg" は、Google 検索エンジンを使用したいことを示しま
す。第二の部分は検索語です。エンジンと検索語は、コロンで分けなければなり
ません。そして @kbd{RET} を叩けば検索結果を見ることができます。スペース
で分離した複数の語を入力できることを、心に留めておいて下さい (ミニバッファ
でスペースをタイプするには、@kbd{C-q @key{SPC}} のように、最初に
@kbd{C-q} を叩いて下さい)。

Emacs-w3m のデフォルトでは、利用可能ないくつかの検索エンジンの短縮形があ
り、それらは変数 @code{w3m-search-quick-search-engine-alist} で定義され
ています。例えば Google には ``gg''、Google Groups 用には ``ggg''、
Yahoo! のための ``ya''、および Altavista に対する ``al'' などの短い名前
です。さらに検索エンジンの短縮形を追加するには、@xref{Adding New Search
Engines} を参照して下さい。

短縮形の代わりに、``google'' や ``yahoo'' のような完全なエンジンの名前を、
クイックサーチ URL に使うこともできます。それらの名前は、変
数 @code{w3m-search-engine-alist} で定義されます。

@node Adding New Search Engines
@subsection お気に入りのエンジンを使うには?
@cindex Adding new search engines

Emacs-w3m は利用可能な多くの検索エンジンを持っています。あなたのお気に入
りの検索エンジンを使いたいのに、万が一にもそれが既知の検索エンジンのリス
トに載っていなかったらどうしましょう?  それを検索エンジンのリストに加え
れば良いのです。そしてそれは極めて簡単です:

@enumerate
@item
最初に、あなたが加えたい検索エンジンのエントリー・ポイントが何かを知らな
ければなりません。例えば:

@uref{http://my.searchengine.com/?query=foobar}


ここで foobar はあなたが検索したい語です。

@item
この情報が手に入ったら、@file{~/.emacs-w3m} ファイルに加えてください:

@lisp
(eval-after-load "w3m-search"
  '(add-to-list 'w3m-search-engine-alist
                '("My engine"
                  "http://my.searchengine.com/?query=%s"
                  nil)))
@end lisp

第一フィールドの "My engine" をあなたのエンジンの説明で、第二フィールド
をエントリー・ポイントで置き換えて下さい (@samp{%s} は重要です。これは検
索を行なうときに、検索語で置き換えられます)。そして第三フィールドは使用
するエンコーディングを意味し、@code{nil} またはそれが省略された場合は変
数 @code{w3m-default-coding-system} の値が標準のエンコーディングとして使
われます。

エンコーディングに関してご参考までに、英語の検索エンジンのためには、ほと
んどそれを考慮する必要がありません。しかしながら、ある日本の検索エンジン
については、それに何か (例えば @code{euc-japan}) を指定する必要があるか
もしれません。

@item
今やこの検索エンジンは、emacs-w3m で通常の @kbd{S} キーで使うことができ
ます。このエンジンを頻繁に使うのならば、短いエンジンの名前をクイックサー
チエンジン (@ref{Quick Searching} を参照) に加えることもできます。それに
は、以下のコードを @file{~/.emacs-w3m} ファイルに追加して下さい:

@lisp
(eval-after-load "w3m-search"
  '(progn
     (add-to-list 'w3m-search-engine-alist
                  '("My engine"
                    "http://my.searchengine.com/?query=%s"
                    nil))
     (add-to-list 'w3m-search-quick-search-engine-alist
                  '("my" . "My engine"))))
@end lisp

これにより、@uref{my:foobar} のような URL を使って、あなたの検索エンジン
で ``foobar'' という語を検索することができます。
@end enumerate

@node Grouping URLs
@section 一つの URL で複数のウェブページを見る
@cindex Grouping URLs

Emacs-w3m は ``group URLs'' という、複数の実際の URL を一つにまとめた特
別な URL を扱うことができます。そのようなグループ URL を開くと、
emacs-w3m は一度に複数のページを開くために、そのグループに含まれるそれぞ
れの URL に対して一つのバッファを開きます。

グループ URL を作るには、開きたいすべてのページのアドレスを単にアンパサ
ンド記号 (``&'') で一緒にして (すなわち結合して)、グループ URL を表す接
頭辞の ``group:'' を付ければ良いのです。例を挙げると、GNU プロジェクトの
ホームページ @uref{http://www.gnu.org/} と Savannah ホームペー
ジ @uref{http://savannah.nongnu.org/} を見たいものとすれば、グルー
プ URL は次のようなものになるでしょう。

@uref{group:http://www.gnu.org/&http://savannah.nongnu.org/}


この構文を日常的に使うのはかなり辛いものがありますが、非常に短い URL (例
えばクイックサーチ URL、@ref{Quick Searching} を参照) や非対話型で使う状
況では、この機能はおおいに役立つでしょう。

@node Weather Information
@section 明日の天気は晴れでしょう


@node Using Antenna
@section アンテナを張り巡らそう
@cindex Antenna
@cindex Tracking changes in web pages
@cindex about://antenna/

アンテナはウェブページの変化を追跡するための道具です。アンテナを使うと、
特定のページが、以前に見たときから更新されたかされなかったかを、周期的に
チェックすることができます。

いずれかの emacs-w3m バッファで @kbd{A} を使うことによって、アンテナを始
めることができます。あるいは、特別の URL @uref{about://antenna/} に行く
ことによっても同じことができます。

@menu
* Setting up Antenna::          ウェブサイトをアンテナに加えるには?
* Daily web tracking::          アンテナで変化を追跡する
@end menu

@node Setting up Antenna
@subsection ウェブサイトをアンテナに加えるには?
@cindex about://antenna-edit/
@kindex +
@findex w3m-antenna-add-current-url

アンテナは、アンテナ・ページにあるカスタマイズのための ``Edit'' ボタン、
または特別の URL @uref{about://antenna-edit/} からカスタマイズすることが
できます。それはかなり分かりやすいものです。ウェブサイトを加えるには以下
のことを行なって下さい:

@enumerate
@item
例えば ``http://my.website.com/index.html'' のような、監視したいウェブペー
ジの完全な URLを、``Key'' フィールドに追加して下さい。

@item
``Title'' フィールドに、``My website'' のようなタイトルを記入して下さい。

@item
``Time'' フィールドで、``Normal''、``Time'' または ``HNS'' のどれかを選
んで下さい。あなたはたぶん第一候補を望むでしょう。
@end enumerate

すべてのフィールドを満たしたら、``New'' のボタンを押して下さい。すると、
あなたのウェブサイトはアンテナ・データベースに加えられます; 追跡したい他
のサイトに対して、同じ操作を繰り返して下さい。

アンテナにウェブサイトを加える他の方法は、そのサイトに行って @kbd{+} キー
を使うことです。すべてのフィールドがすでに書きこまれた、アンテナをカスタ
マイズするためのバッファが現れるでしょう。あなたは単に ``Save for future
sessions'' と ``Finish'' のボタンを押せば良いのです。

@table @kbd
@item +
URL をアンテナ・データベースに加えます。接頭引数付きで呼ばれた場合は、現
在のページを追加するのではなくて、加える URL を尋ねま
す (@code{w3m-antenna-add-current-url})。
@end table

@node Daily web tracking
@subsection アンテナで変化を追跡する
@cindex The Antenna interface
@kindex A
@findex w3m-antenna

アンテナ・ページには二つの項目が現れます: 一つは ``Updated'' と呼ばれ、
もう一つは ``Visited'' と呼ばれます。``Updated'' の項目では最後にアンテ
ナを更新した後で変化したウェブサイトが、そして ``Visited'' の項目では変
化しなかったウェブサイトが見つかります。それぞれの項目で、各行はアンテナ・
データベースの一つのウェブサイトを表し、以下の構造になっています:

@samp{  * 2002/12/15 16:43  (T)  My website}

最初の部分は、アンテナが最後にそのページの変化を報告した、そのウェブサイ
トが更新された最終時刻です。またはその情報が得られないこともあります。

@samp{(T)} は ``Time'' を表し、最後にアンテナを更新した後で、そのページ
の変更時刻が変化したので、変化が検出されたことを意味します。もう一つの可
能性がある値は @samp{S} (``Size'' のこと) で、そのページのサイズが変化し
たので、変化が検出されたことを意味します。

行の最後の部分は、データベースに追加したときに与えた、このウェブサイトの
タイトルです。

どうか、アンテナ・データベースは自動的に更新されないことに注意して下さい。
アンテナ・ページで @kbd{R} を叩くか、または接頭引数をコマンドに渡す (例
えば @kbd{C-u A} でアンテナを始める) ことによって、サイトが変化したかど
うかをチェックしたい毎に、それを更新しなければなりません。

@table @kbd
@item A
Visit the Antenna page.  If called with a prefix argument, update the
Antenna database before displaying it (@code{w3m-antenna}).
@end table

@node Showing Directory Tree
@section ディレクトリの木構造を表示する


@node Viewing Perl Documents
@section Perl のドキュメントを見る


@node Using Namazu
@section Namazu でファイルを検索する


@node Octet
@section application/octet-stream データを見る


@node Customizable Options
@chapter デフォルトのままでも結構良いと思うけれど
@cindex User option
@vindex w3m-init-file

All emacs-w3m options are customizable via the Custom mechanism, a
graphical Emacs interface to define user options.  Custom offers several
methods to define your customizations, you can use for example @kbd{M-x
customize-option} for a single option (i.e. an Emacs Lisp variable) or
@kbd{M-x customize-group} to see all available options for a ``group''
and change them; in which case the group to use is @code{w3m}.

Alternatively (if you don't want to use Custom), you can put arbitrary
Emacs Lisp expressions in your emacs-w3m initialization file, which is
@file{~/.emacs-w3m} by default.  This example:

@lisp
(setq w3m-home-page "http://emacs-w3m.namazu.org/")
@end lisp

would set the default homepage to @uref{http://emacs-w3m.namazu.org/}.
The syntax to use is the same as in your @file{.emacs}
file. @xref{(emacs)Init File}.

Please note that some options from external modules could be undefined
at the time the @file{~/.emacs-w3m} file is loaded, thus making them
impossible to modify (of course if you don't care about the default
value, you can override them completely in your @file{~/.emacs-w3m}).
The @code{w3m-search-quick-search-engine-alist} option is a typical
example (@pxref{Search Options}).

@table @code

@item w3m-init-file
Emacs-w3m が起動すると、@code{w3m-init-file} ファイルを読み込みます。デ
フォルト値は @file{~/.emacs-w3m} です。たぶん、あなたはこれを変更する必
要は無いでしょう。これは普通の Emacs Lisp ファイルで、
@file{~/.emacs} や @file{site-init} ファイルを emacs-w3m 関係のもので乱
雑にしないようにするために使うことができます。Emacs-w3m はこれと同じ名前
に、拡張子 @file{.elc} と @file{.el} が付いているものも (言い換えれば、
@file{~/.emacs-w3m.elc}、@file{~/.emacs-w3m.el} およ
び @file{~/.emacs-w3m} の順に) 調べます。

@end table

@menu
* General Options::             一般的なユーザオプション
* Image Options::               画像に関連したユーザオプション
* Bookmark Options::            ブックマークに関連したユーザオプション
* Search Options::              ウェブ検索に関連したユーザオプション
* Weather Options::             天気予報に関連したユーザオプション
* Dtree Options::               dtree に関連したユーザオプション
* Antenna Options::             アンテナに関連したユーザオプション
* Perldoc Options::             Perldoc に関連したユーザオプション
* Namazu Options::              Namazu に関連したユーザオプション
* Octet Options::               Octet に関連したユーザオプション
* Other Options::               その他のユーザオプション
@end menu

@node General Options
@section 一般的なユーザオプション


@node Image Options
@section 画像に関連したユーザオプション


@node Bookmark Options
@section ブックマークに関連したユーザオプション


@node Search Options
@section ウェブ検索に関連したユーザオプション


@node Weather Options
@section 天気予報に関連したユーザオプション


@node Dtree Options
@section dtree に関連したユーザオプション


@node Antenna Options
@section アンテナに関連したユーザオプション


@node Perldoc Options
@section Perldoc に関連したユーザオプション


@node Namazu Options
@section Namazu に関連したユーザオプション


@node Octet Options
@section Octet に関連したユーザオプション


@node Other Options
@section その他のユーザオプション


@node Hooking into MUAs
@chapter メール/ニュースリーダーで使う


@menu
* Gnus::                        Gnus で HTML メールを読む
* Mew::                         Mew で HTML メールを読む
* SEMI MUAs::                   SEMI MUA で HTML メールを読む
@end menu

@node Gnus
@section Gnus で HTML メールを読む


@node Mew
@section Mew で HTML メールを読む


@node SEMI MUAs
@section SEMI MUA で HTML メールを読む


@node Frequently Asked Questions
@chapter 必ず答があるとは限らない


@node Known Problems
@chapter あなたならきっと解決できる


@node Shimbun Library
@chapter ウェブ上の新聞を読むための道具
@cindex shimbun


@node Mailing List
@chapter メーリングリスト、バグリポート
@cindex mailing list
@cindex bug reports


@node Index
@unnumbered 索引

@menu
* Concept Index::               概念索引
* Key Index::                   キーバインド索引
* Variable Index::              変数索引
* Function Index::              関数索引
@end menu

@node Concept Index
@unnumberedsec 概念索引
@printindex cp

@node Key Index
@unnumberedsec キーバインド索引
@printindex ky

@node Variable Index
@unnumberedsec 変数索引
@printindex vr

@node Function Index
@unnumberedsec 関数索引
@printindex fn

@summarycontents
@contents
@bye

@c Local Variables:
@c fill-column: 72
@c End:
