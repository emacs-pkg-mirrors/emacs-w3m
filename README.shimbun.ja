1. はじめに

shimbun ライブラリでは、新聞やニュースサイト、メーリングリストアーカイブ
などを適切に取り扱うためのインターフェイスを提供します。

shimbun ライブラリを利用できるユーザエージェントは、以下の通りです。

	Wanderlust (2.7.0 以降)
	T-gnus-6_15
	Gnus (T-gnus の nnshimbun.el が必要)
	Mew (2.1 以降) "3. mew-shimbun.el について" をお読み下さい

APEL および FLIM パッケージが必要です。インストールする前にそれらをイン
ストールしてください。それらのパッケージは

ftp://ftp.m17n.org/pub/mule/apel/
ftp://ftp.m17n.org/pub/mule/flim/

から取得することができます。

2. 利用可能なコンテンツ

2-1. 新聞

朝日		asahi.national asahi.business asahi.politics
		asahi.international asahi.sports
		(asahi-html も用意されています。)
毎日		mainichi.shakai mainichi.sports mainichi.seiji
		mainichi.keizai mainichi.kokusai mainichi.fuho
日経		nikkei.keizai nikkei.seiji nikkei.kaigai nikkei.market
		nikkei.sangyo nikkei.tento nikkei.shakai nikkei.retto
		nikkei.shasetsu nikkei.zinzi nikkei.okuyami
スポニチ		sponichi.baseball sponichi.soccer sponichi.usa
		sponichi.others sponichi.society
		sponichi.entertainment sponichi.horseracing
讀売		yomiuri.shakai yomiuri.sports yomiuri.seiji
		yomiuri.keizai yomiuri.kokusai yomiuri.fuho
日刊スポーツ	nikkansports.baseball nikkansports.mlb
		nikkansports.soccer nikkansports.world-soccer
		nikkansports.sports nikkansports.battle
		nikkansports.horseracing nikkansports.entertainment
		nikkansports.society nikkansports.leisure

2-2. ニュースサイト

Japan CNET	cnet.comp
インプレス	impress.internet impress.pc impress.akiba impress.game
		impress.av impress.jijinews impress.sports
slashdot-jp	slashdot-jp.story
HotWired	wired.business wired.culture wired.technology
YAHOO!JAPAN	yahoo.politics yahoo.society yahoo.people
		yahoo.business-all yahoo.market yahoo.stock
		yahoo.industry yahoo.international yahoo.entertainment
		yahoo.sports yahoo.computer yahoo.hokkaido yahoo.tohoku
		yahoo.kanto yahoo.sinetsu yahoo.hokuriku yahoo.tokai
		yahoo.kinki yahoo.chugoku yahoo.sikoku yahoo.kyushu
		yahoo.okinawa
ZDNet		zdnet.comp zdnet.gamespot

2-3. Mailing List

semi-gnus-ja	airs.semi-gnus
wanderlust	airs.wl	
bbdb-ml		bbdb-ml.bbdb-ml
ding-gnus 関連	ding.ding ding.ding-announce ding.ding-cvslog
gnome 関連	gnome.balsa-list gnome.calendar-list
		gnome.cvs-commits-list gnome.foundation-announce
		gnome.foundation-list gnome.fplan-list
		gnome.gconf-list gnome.gdome gnome.gnome-1.4-list
		gnome.gnome-announce-list gnome.gnome-components-list
		gnome.gnome-db-list gnome.gnome-de
		gnome.gnome-debugger-list gnome.gnome-devel-list
		gnome.gnome-doc-list gnome.gnome-gui-list
		gnome.gnome-hackers gnome.gnome-hackers-readonly
		gnome.gnome-hackers-test gnome.gnome-i18n
		gnome.gnome-i18n-tools gnome.gnome-kde-list
		gnome.gnome-list gnome.gnome-office-list
		gnome.gnome-pilot-list gnome.gnome-sound-list
		gnome.gnome-themes-list gnome.gnome-ui-hackers
		gnome.gnome-web-list gnome.gnome-webmaster-list
		gnome.gnome-workshop-list gnome.gnomecc-list
		gnome.gnumeric-list gnome.gtk-app-devel-list
		gnome.gtk-devel-list gnome.gtk-doc-list
		gnome.gtk-i18n-list gnome.gtk-list gnome.gtk-perl-list
		gnome.guppi-list gnome.libart gnome.libart-hackers
		gnome.orbit-list gnome.vote gnome.wm-spec-list
		gnome.xml gnome.xslt
gs-cjk		gyve.gs-cjk
h14m 関連	h14m.hns-dev h14m.hns-users
Java カンファレンス関連	javaconf.servlet-ml javaconf.business-ml
		javaconf.duke-in-the-box-ml javaconf.jfriends-ml
		javaconf.JGT-ml javaconf.jini-ml javaconf.ejb-ml
		javaconf.cm-ml javaconf.horb-ml javaconf.talk-ml
linux-ce	linux-ce.users
mule-ja		m17n.mule-ja
meadow 関連	meadow.meadow-develop meadow.meadow-users-jp
mew 関連	mew.mew-dist mew.mew-win32 mew.mew-int
mgp 関連	mew.mgp-users mew.mgp-users-jp
namazu 関連	namazu.namazu-users-ja namazu.namazu-win32-users-ja
		namazu.namazu-users-en namazu.namazu-devel-ja
		namazu.namazu-devel.en
emacs-w3m	namazu.emacs-w3m
netbsd 関連	netbsd.announce-ja netbsd.junk-ja netbsd.tech-misc-ja
		netbsd.tech-pkg-ja netbsd.port-arm32-ja
		netbsd.port-hpcmips-ja netbsd.port-mac68k-ja
		netbsd.port-mips-ja netbsd.port-powerpc-ja
		netbsd.hpcmips-changes-ja netbsd.members-ja
		netbsd.admin-ja netbsd.www-changes-ja
ruby 関連	ruby.comp.lang.ruby ruby.fj.comp.lang.ruby
		ruby.ruby-dev ruby.ruby-ext ruby.ruby-list
		ruby.ruby-math ruby.ruby-talk
tlinux-users-j	toshiba.linux-users-j
w3m-dev		w3m-dev.w3m-dev
digiko-ml	digiko.digiko
xemacs 関連	xemacs.xemacs-announce xemacs.xemacs-beta-ja
		xemacs.xemacs-beta xemacs.xemacs-build-reports
		xemacs.xemacs-cvs xemacs.xemacs-mule xemacs.xemacs-nt
		xemacs.xemacs-patches xemacs.xemacs-users-ja
		xemacs.xemacs
セキュリティーMEMO security-memo.memo

2-4. スポーツ

makanai			makanai.f1news
F1 ファン		f1fan.news
トーチュウ F1 EXPRESS	f1express.f1 f1express.cart f1express.japan
			f1express.wrc f1express.bike f1express.paris
			f1express.other f1express.club
イサイズ スポーツ		isize-sports.football isize-sports.f1
			isize-sports.mlb isize-sports.nba
			isize-sports.nfl isize-sports.x-league
			isize-sports.keiba isize-sports.golf
			isize-sports.table-tennis

2-5. その他

ゆうτοπια掲示板	tcup.yutopia
Meadow 掲示板		tcup.meadow
vinelinux web サイト	vinelinux.errata.2x.i386 vinelinux.errata.2x.ppc
			vinelinux.errata.2x.sparc
			vinelinux.errata.2x.alpha vinelinux.errata.1x
HNS による日記
小泉内閣メールマガジン  kantei.m-magazine
IBM developerWorks	ibm-dev.components ibm-dev.java ibm-dev.linux
			ibm-dev.opensource ibm-dev.security
			ibm-dev.unicode
			ibm-dev.usability ibm-dev.web
			ibm-dev.webservices
			ibm-dev.xml 
Muchy's Palmware Review! muchy.review

3. mew-shimbun.el について

mew-shimbun.el は Mew version 2.1 以降を使って shimbun を楽しむ elisp で
す。Mew と APEL、FLIM がインストールされていれば、emacs-w3m のインストー
ル時に同時にインストールされます。

3.1 設定
~/.mew.el の最後に以下のように書きます。

;;; mew-shimbun のロード、キー定義
;; (setq mew-shimbun-use-unseen t)		;;; (*1)
(require 'mew-shimbun)
(define-key mew-summary-mode-map "G"  (make-sparse-keymap))
(define-key mew-summary-mode-map "Gg" 'mew-shimbun-goto-folder)
(define-key mew-summary-mode-map "Gi" 'mew-shimbun-retrieve)
(define-key mew-summary-mode-map "GI" 'mew-shimbun-retrieve-all)
(define-key mew-summary-mode-map "Gr" 'mew-shimbun-re-retrieve)
(define-key mew-summary-mode-map "GR" 'mew-shimbun-re-retrieve-all)
(when mew-shimbun-use-unseen
  (define-key mew-summary-mode-map "Gu" 'mew-shimbun-unseen-check)
  (define-key mew-summary-mode-map "GU" 'mew-shimbun-unseen-remove-all))

;;; (*1) は後述する未読管理をするときに設定します。この変数は、
;;; 必ず (require 'mew-shimbun) の前で設定しないといけません。

;;; 変数の設定の例
;; ハイパー日記システムのサイトを読むときは例えば以下のように設定します。
;; (これは、Mew に限らずすべての MUA で共通の方式です)

(setq shimbun-hns-group-alist
      '(("arisawa"				;; グループ名
	 "http://www.nijino.com/ari/diary/"	;; URL
	 "ari@mbf.sphere.ne.jp")		;; From: に挿入するメールアドレス
	("miyoshi"
	 "http://www.be.wakwak.com/cgi-bin/sbox/~miyoshi/hns/"
	 "miyoshi@meadowy.org")))

;; mew-shimbun-folder-groups に Mew で購読する shimbun server 及び group
;; を設定します。
;; それぞれ、("folder" (("server.group" . range) ...)) で range には
;; all, last, 数字が指定できます。以下に例を示します。

(setq mew-shimbun-folder-groups
      '(("yomiuri"			;; +shimbun/yomiuri という folder に
	 ("yomiuri.shakai" . 2)		;; yomiuri.shakai, yomiuri.sports
	 ("yomiuri.sports". 2)		;; などを一括して取得します。
	 ("yomiuri.kokusai". 2))
	("security-memo"		;; +shimbun/security-memo に
	 ("security-memo.memo" . 2))	;; security-memo.memo を取得します。
	("slashdot-jp"
	 ("slashdot-jp.story" . last))
	("comp"				;; このように、異なる server の group
	 ("cnet.comp" . last)		;; も一つの folder (+shimbun/comp) で
	 ("zdnet.comp" . last))		;; 読むことができます。
	("hns/arisawa"			;; +shimbun/hns/arisawa, +shimbun/hns/miyoshi
	 ("hns.arisawa" . last))	;; にそれぞれの日記を取得します。
	("hns/miyoshi"
	 ("hns.miyoshi" . last))))

;;; 以上で基本的な設定は終了です。
;;; あとのユーザ定義変数は custom するかソースを見てください。

3.2 記事の購読

(1) 最初の購読
上記の設定をしたあと、まず、"GI (mew-shimbun-retrieve-all)" しましょう。
mew-shimbun-folder-groups で設定した shimbun folder が "+shimbun" 以下に
出来ています。また、新たに group を追加したときも "GI" すると便利です。
なお、"+shimbun" は mew-shimbun-folder という変数で好みのものに変更でき
ます。

(2) shimbun folder への移動
通常の "g (mew-summary-goto-folder)" でも shimbun folder への移動はでき
ますが、"Gg (mew-shimbun-goto-folder)" を使うと shimbun folder 限定で移
動できます。また、"C-u Gg" と prefix をつけたときは、新規記事のある
folder (まだ scan をしていない folder) のみ、最後に "*" をつけて補完候補
に表示します。

(3) folder 単位での記事の取得
shimbun folder で "Gi (mew-shimbun-retrieve)" すると、現在の shimbun
folder で新規記事を取得します。

(4) 更新された記事の取得
特定の記事を表示した状態で "Gr (mew-shimbun-re-retrieve)" すると、その記
事が更新されていたら更新し、同時に新規記事も取得します。
"C-u Gr" とすると、mew-shimbun-mark-re-retrieve に指定したマーク(デファ
ルトは '@') の記事の更新を試みます。CNET などで使うと便利でしょう。

"GR (mew-shimbun-re-retrieve-all)" では、すべての記事の新規性を調べ取得
しなおします。"C-u GR" ではリージョンで指定した範囲の記事を対象とします。
おそらくハイパー日記システムの日記サイトで有意義なコマンドでしょう。

3.3 未読管理

(setq mew-shimbun-use-unseen t) としていると、新規に取得した記事に
mew-shimbun-mark-unseen で設定したマーク(デファルトは '*') がつくように
なり、読むと自動的に消えます。

未読管理を導入すると "C-u Gg" で未読記事のある folder も表示するようにな
ります。新規記事のある folder は最後に "*", 未読記事のある folder は最後
に "%" をつけて表示するようになります。

通常、Mew の summary モードでマークをつける、あるいは消した後、scan をし
ないと .mew-cache に反映されませんが、

(setq mew-shimbun-use-unseen-cache-save t)

とすることにより、Mew の終了時や folder の kill (C-cC-q を使ったとき)
に shimbun folder は自動的に .mew-cache を保存するようになります。ただし、
確実 (*2) に保存するわけではありません。既読になった情報を確実に cache
に保存するには、その folder を読み終わったときに "scan update" をする習
慣をつけると良いでしょう。

また、なんらかの原因で未読情報が狂って summary に表示されたときは、"Gu
(mew-shimbun-unseen-check)" または "Scan all" で正常な表示に戻ります。

未読管理を使うと弊害として、動作が遅くなる、複数の Emacs で同じ shimbun
folder を読んでいると、それぞれの Emacs 間で矛盾が生じる、といったことが
あげられますので、注意して使ってください。

その他の未読管理サポートとして、現在の folder をすべて既読にするには 
"GU (mew-shimbun-remove-unseen-all)" を使います。"C-u GU" でリージョン内
のみ既読にします。
あとで全部読み直そうというときには "M-x mew-shimbun-all-unseen" も有効か
もしれません。

未読に使うマークが "*" じゃダメ、という方は、
http://www.mew.org/ml/mew-dist-2.0/msg01251.html
を参考にして新しいマークを定義してください。"C-u N" でそのマークを指定す
ると楽しい未読ライフをおくることができると思います。

(*2) mew-touch-folder-p が 't' の人はほぼ 100% 保存できますが、'nil'
  の人が保存できる可能性はほとんど 0% だと思われます。


Local Variables:
mode: text
coding: euc-japan
use-kuten-for-period: nil
use-touten-for-comma: nil
fill-column: 72
End:
